package com.sfle.core.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.sfle.commons.pojo.SfleResult;
import com.sfle.commons.utils.ExceptionUtil;
import com.sfle.commons.utils.FastDFSClient;
import com.sfle.core.mapper.TbUserFileMapper;
import com.sfle.core.pojo.TbUserFile;
import com.sfle.core.service.UserFileService;

@Service
public class UserFileServiceImpl implements UserFileService {

	@Value("${FILE_SERVER_BASE_URL}")
	private String FILE_SERVER_BASE_URL;
	
	@Autowired
	private TbUserFileMapper userFileMapper;
	
	@Override
	public SfleResult uploadFile(MultipartFile multipartFile) {

		try {

			String originalFilename = multipartFile.getOriginalFilename();
			String extName = originalFilename.substring(originalFilename.lastIndexOf(".") + 1);
			FastDFSClient client = new FastDFSClient("classpath:properties/client.conf");
			String url = client.uploadFile(multipartFile.getBytes(), extName);
			
			String fullUrl = FILE_SERVER_BASE_URL + url;
			
			TbUserFile tbUserFile = new TbUserFile();
			tbUserFile.setName(multipartFile.getName());
			tbUserFile.setSize(multipartFile.getSize());
			tbUserFile.setCreated(new Date());
			tbUserFile.setUrl(fullUrl);
			
			userFileMapper.insert(tbUserFile);
			
			return SfleResult.ok(fullUrl);

		} catch (Exception e) {
			e.printStackTrace();
			return SfleResult.build(500, ExceptionUtil.getStackTrace(e));
		}

	}

	@Override
	public List<TbUserFile> getUserFileList(Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

}
